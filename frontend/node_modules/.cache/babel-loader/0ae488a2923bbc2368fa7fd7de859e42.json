{"ast":null,"code":"var _jsxFileName = \"/Users/jucenirleonardo/Documents/GitHub/whaticket_saas/frontend/src/components/CurrencyInput/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nconst defaultMaskOptions = {\n  prefix: 'R$',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: '.',\n  allowDecimal: true,\n  decimalSymbol: ',',\n  decimalLimit: 2,\n  // how many digits allowed after the decimal\n  integerLimit: 7,\n  // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false\n};\nconst CurrencyInput = _ref => {\n  let {\n    maskOptions,\n    ...inputProps\n  } = _ref;\n  const currencyMask = createNumberMask({\n    ...defaultMaskOptions,\n    ...maskOptions\n  });\n  return /*#__PURE__*/React.createElement(MaskedInput, Object.assign({\n    mask: currencyMask\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }));\n};\nCurrencyInput.defaultProps = {\n  inputMode: 'numeric',\n  maskOptions: {}\n};\nCurrencyInput.propTypes = {\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.bool,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.bool,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.bool,\n    allowNegative: PropTypes.bool,\n    allowLeadingZeroes: PropTypes.bool,\n    integerLimit: PropTypes.number\n  })\n};\nexport default CurrencyInput;","map":{"version":3,"names":["React","PropTypes","MaskedInput","createNumberMask","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","CurrencyInput","_ref","maskOptions","inputProps","currencyMask","createElement","Object","assign","mask","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","inputMode","propTypes","inputmode","string","shape","bool","requireDecimal","number"],"sources":["/Users/jucenirleonardo/Documents/GitHub/whaticket_saas/frontend/src/components/CurrencyInput/index.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport MaskedInput from 'react-text-mask'\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\n\nconst defaultMaskOptions = {\n  prefix: 'R$',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: '.',\n  allowDecimal: true,\n  decimalSymbol: ',',\n  decimalLimit: 2, // how many digits allowed after the decimal\n  integerLimit: 7, // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false,\n}\n\nconst CurrencyInput = ({ maskOptions, ...inputProps }) => {\n  const currencyMask = createNumberMask({\n    ...defaultMaskOptions,\n    ...maskOptions,\n  })\n\n  return <MaskedInput mask={currencyMask} {...inputProps} />\n}\n\nCurrencyInput.defaultProps = {\n  inputMode: 'numeric',\n  maskOptions: {},\n}\n\nCurrencyInput.propTypes = {\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.bool,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.bool,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.bool,\n    allowNegative: PropTypes.bool,\n    allowLeadingZeroes: PropTypes.bool,\n    integerLimit: PropTypes.number,\n  }),\n}\n\nexport default CurrencyInput\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,gBAAgB,MAAM,wCAAwC;AAErE,MAAMC,kBAAkB,GAAG;EACzBC,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE,EAAE;EACVC,yBAAyB,EAAE,IAAI;EAC/BC,wBAAwB,EAAE,GAAG;EAC7BC,YAAY,EAAE,IAAI;EAClBC,aAAa,EAAE,GAAG;EAClBC,YAAY,EAAE,CAAC;EAAE;EACjBC,YAAY,EAAE,CAAC;EAAE;EACjBC,aAAa,EAAE,KAAK;EACpBC,kBAAkB,EAAE;AACtB,CAAC;AAED,MAAMC,aAAa,GAAGC,IAAA,IAAoC;EAAA,IAAnC;IAAEC,WAAW;IAAE,GAAGC;EAAW,CAAC,GAAAF,IAAA;EACnD,MAAMG,YAAY,GAAGhB,gBAAgB,CAAC;IACpC,GAAGC,kBAAkB;IACrB,GAAGa;EACL,CAAC,CAAC;EAEF,oBAAOjB,KAAA,CAAAoB,aAAA,CAAClB,WAAW,EAAAmB,MAAA,CAAAC,MAAA;IAACC,IAAI,EAAEJ;EAAa,GAAKD,UAAU;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAAC;AAC5D,CAAC;AAEDd,aAAa,CAACe,YAAY,GAAG;EAC3BC,SAAS,EAAE,SAAS;EACpBd,WAAW,EAAE,CAAC;AAChB,CAAC;AAEDF,aAAa,CAACiB,SAAS,GAAG;EACxBC,SAAS,EAAEhC,SAAS,CAACiC,MAAM;EAC3BjB,WAAW,EAAEhB,SAAS,CAACkC,KAAK,CAAC;IAC3B9B,MAAM,EAAEJ,SAAS,CAACiC,MAAM;IACxB5B,MAAM,EAAEL,SAAS,CAACiC,MAAM;IACxB3B,yBAAyB,EAAEN,SAAS,CAACmC,IAAI;IACzC5B,wBAAwB,EAAEP,SAAS,CAACiC,MAAM;IAC1CzB,YAAY,EAAER,SAAS,CAACmC,IAAI;IAC5B1B,aAAa,EAAET,SAAS,CAACiC,MAAM;IAC/BvB,YAAY,EAAEV,SAAS,CAACiC,MAAM;IAC9BG,cAAc,EAAEpC,SAAS,CAACmC,IAAI;IAC9BvB,aAAa,EAAEZ,SAAS,CAACmC,IAAI;IAC7BtB,kBAAkB,EAAEb,SAAS,CAACmC,IAAI;IAClCxB,YAAY,EAAEX,SAAS,CAACqC;EAC1B,CAAC;AACH,CAAC;AAED,eAAevB,aAAa"},"metadata":{},"sourceType":"module"}